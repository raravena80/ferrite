name: Security Audit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security audit daily at 1 AM UTC
    - cron: '0 1 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

    - name: Run security audit with JSON output
      run: cargo audit --json > audit-results.json
      continue-on-error: true

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-audit-results
        path: audit-results.json

  deny:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-deny
      run: cargo install cargo-deny

    - name: Create deny.toml if it doesn't exist
      run: |
        if [ ! -f deny.toml ]; then
          cat > deny.toml << EOF
        [graph]
        targets = [
            { triple = "x86_64-unknown-linux-gnu" },
            { triple = "x86_64-apple-darwin" },
            { triple = "x86_64-pc-windows-msvc" },
        ]

        [output]
        feature-depth = 1

        [advisories]
        version = 2
        yanked = "deny"
        ignore = []

        [licenses]
        version = 2
        allow = [
            "MIT",
            "Apache-2.0",
            "Apache-2.0 WITH LLVM-exception",
            "BSD-2-Clause",
            "BSD-3-Clause",
            "ISC",
            "Unicode-DFS-2016",
            "CC0-1.0",
        ]
        deny = [
            "GPL-2.0",
            "GPL-3.0",
        ]

        [bans]
        multiple-versions = "warn"
        wildcards = "allow"
        deny = [
            # Deny specific problematic crates
            { name = "openssl", reason = "Use rustls instead" },
        ]

        [sources]
        unknown-registry = "deny"
        unknown-git = "deny"
        EOF
        fi

    - name: Run cargo deny check
      run: cargo deny check

  unused-deps:
    name: Unused Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@nightly

    - name: Install cargo-udeps
      run: cargo install cargo-udeps

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Check for unused dependencies
      run: cargo +nightly udeps

  supply-chain:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install cargo-geiger
      run: cargo install cargo-geiger

    - name: Run unsafe code analysis
      run: cargo geiger --format GitHubMarkdown >> geiger-report.md

    - name: Upload geiger report
      uses: actions/upload-artifact@v4
      with:
        name: supply-chain-analysis
        path: geiger-report.md 